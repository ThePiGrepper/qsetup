#remap prefix to ctrl+A
unbind-key C-b
set -g prefix C-a
bind-key C-a send-prefix #escape C-a

#force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

#new bindings for splitting
#splitting to home
bind \ split-window -h
bind - split-window -v
unbind '"'
unbind %
#splitting with memory
bind | split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind _ split-window -v -c '#{pane_current_path}'  # Split panes vertically

## Join windows: <prefix> s, <prefix> j
#bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key k command-prompt -p "send pane to:"  "join-pane -t '%%'"

#move freely between panes using dir-arrows
bind -n M-Left  select-pane -L
bind -n M-Down  select-pane -D
bind -n M-Up    select-pane -U
bind -n M-Right select-pane -R

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

#vim copy-mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

bind -n M-q rotate-window
unbind C-o

#clipboard handling
# C-c: save into system clipboard (+). With preselection.
bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -sel clipboard\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-v: copy from + clipboard.(Optional: can use shift+ctrl+v to paste clipboard)
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(+\) $(xclip -o -sel clipboard | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

# C-d: save into selection clipboard (*). With preselection.
bind C-d choose-buffer "run \"tmux save-buffer -b %% - | xclip -i\" \; run \" tmux display \\\"Clipboard \(*\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-f: copy from * clipboard.
bind C-f run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(*\) $(xclip -o | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

# ----------------------
# set some pretty colors
# ----------------------
set-option -g default-terminal "xterm-256color"
# set pane colors - hilight the active pane
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# colorize messages in the command line
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

#define colour config
set -g status on
set -g status-bg colour1
set -g pane-border-style fg=colour1
set -g pane-active-border-style fg=colour3

#####################
#new(not fully tested) features
set-window-option -g window-status-current-bg yellow

#turn on activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Rename your terminals
#TEST THIS
#set -g set-titles on
#set -g set-titles-string '#(whoami)::#h::#(curl ipecho.net/plain;echo)'

#mouse selection enabled
#set-option -g mouse-select-pane on

# workflow sessions
# run this only from a new session!
# current sessions: mcu
bind-key a  command-prompt -p "load custom session:" "run \"tmux source-file ${QSETUP_DOTFILE_PATH}/$(${QSETUP_DOTFILE_PATH}/tmuxSessionMenu.sh %%)\" "
